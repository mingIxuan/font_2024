{"version":3,"file":"static/js/main.171eb4d5.js","mappings":"MAAA,MAAMA,EAAgBC,SAASC,cAAc,mBAC7C,IACIC,EAAWC,EADXC,EAAQ,GAERC,GAAY,EACZC,EAAQ,EAYZ,SAASC,IACP,IACEC,EACAC,EAFEC,EAAeN,EAAMO,OAGzB,KAAwB,IAAjBD,GACLF,EAAcI,KAAKC,MAAMD,KAAKE,SAAWJ,GACzCA,GAAgB,EAChBD,EAAiBL,EAAMM,GACvBN,EAAMM,GAAgBN,EAAMI,GAC5BJ,EAAMI,GAAeC,CAEzB,CAEA,SAASM,IACP,IAAK,IAAIC,KAAQZ,EAAO,CACtB,MAAMa,EAAcjB,SAASkB,cAAc,OAC3CD,EAAYE,UAAUC,IAAI,QAC1BH,EAAYI,aAAa,YAAaL,EAAKM,MAC3CL,EAAYM,UAAY,qDAAqDP,EAAKQ,6CAElFzB,EAAc0B,YAAYR,GAC1BA,EAAYS,iBAAiB,QAASC,EACxC,CACF,CAEA,SAASA,IACHtB,GACAuB,OAAS1B,IAEb0B,KAAKT,UAAUC,IAAI,WAEdlB,GAKLC,EAAayB,KACbtB,IACAN,SAASC,cAAc,UAAU4B,YAAcvB,EAC/CD,GAAY,EAMEH,EAAU4B,QAAQR,OAASnB,EAAW2B,QAAQR,MAM5DpB,EAAU6B,oBAAoB,QAASJ,GACvCxB,EAAW4B,oBAAoB,QAASJ,GAExCK,KAIAC,YAAW,KACT/B,EAAUiB,UAAUe,OAAO,WAC3B/B,EAAWgB,UAAUe,OAAO,WAC5BF,GAAY,GACX,MA9BD9B,EAAY0B,KAUhB,CAuBA,SAASI,IACP9B,EAAY,KACZC,EAAa,KACbE,GAAY,CACd,CA/EAL,SAASC,cAAc,UAAU4B,YAAcvB,EAE/C6B,MAAO,8BACJC,MAAMC,GAAQA,EAAIC,SAClBF,MAAMG,IACLnC,EAAQ,IAAImC,KAASA,GACrBhC,IACAQ,GAAe,G","sources":["index.js"],"sourcesContent":["const gridContainer = document.querySelector(\".grid-container\");\r\nlet cards = [];\r\nlet firstCard, secondCard;\r\nlet lockBoard = false;\r\nlet score = 0;\r\n\r\ndocument.querySelector(\".score\").textContent = score;\r\n\r\nfetch (\"./data_memotest/cards.json\")\r\n  .then((res) => res.json())\r\n  .then((data) => {\r\n    cards = [...data, ...data];\r\n    shuffleCards();\r\n    generateCards();\r\n  });\r\n\r\nfunction shuffleCards() {\r\n  let currentIndex = cards.length,\r\n    randomIndex,\r\n    temporaryValue;\r\n  while (currentIndex !== 0) {\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex -= 1;\r\n    temporaryValue = cards[currentIndex];\r\n    cards[currentIndex] = cards[randomIndex];\r\n    cards[randomIndex] = temporaryValue;\r\n  }\r\n}\r\n\r\nfunction generateCards() {\r\n  for (let card of cards) {\r\n    const cardElement = document.createElement(\"div\");\r\n    cardElement.classList.add(\"card\");\r\n    cardElement.setAttribute(\"data-name\", card.name);\r\n    cardElement.innerHTML = `<div class=\"front\"> <img class=\"front-image\" src=\"${card.image}\" /> </div> <div class=\"back\"></div> `;\r\n    ;\r\n    gridContainer.appendChild(cardElement);\r\n    cardElement.addEventListener(\"click\", flipCard);\r\n  }\r\n}\r\n\r\nfunction flipCard() {\r\n  if (lockBoard) return;\r\n  if (this === firstCard) return;\r\n\r\n  this.classList.add(\"flipped\");\r\n\r\n  if (!firstCard) {\r\n    firstCard = this;\r\n    return;\r\n  }\r\n\r\n  secondCard = this;\r\n  score++;\r\n  document.querySelector(\".score\").textContent = score;\r\n  lockBoard = true;\r\n\r\n  checkForMatch();\r\n}\r\n\r\nfunction checkForMatch() {\r\n  let isMatch = firstCard.dataset.name === secondCard.dataset.name;\r\n\r\n  isMatch ? disableCards() : unflipCards();\r\n}\r\n\r\nfunction disableCards() {\r\n  firstCard.removeEventListener(\"click\", flipCard);\r\n  secondCard.removeEventListener(\"click\", flipCard);\r\n\r\n  resetBoard();\r\n}\r\n\r\nfunction unflipCards() {\r\n  setTimeout(() => {\r\n    firstCard.classList.remove(\"flipped\");\r\n    secondCard.classList.remove(\"flipped\");\r\n    resetBoard();\r\n  }, 1000);\r\n}\r\n\r\nfunction resetBoard() {\r\n  firstCard = null;\r\n  secondCard = null;\r\n  lockBoard = false;\r\n}\r\n\r\nfunction restart() {\r\n  resetBoard();\r\n  shuffleCards();\r\n  score = 0;\r\n  document.querySelector(\".score\").textContent = score;\r\n  gridContainer.innerHTML = \"\";\r\n  generateCards();\r\n}"],"names":["gridContainer","document","querySelector","firstCard","secondCard","cards","lockBoard","score","shuffleCards","randomIndex","temporaryValue","currentIndex","length","Math","floor","random","generateCards","card","cardElement","createElement","classList","add","setAttribute","name","innerHTML","image","appendChild","addEventListener","flipCard","this","textContent","dataset","removeEventListener","resetBoard","setTimeout","remove","fetch","then","res","json","data"],"sourceRoot":""}